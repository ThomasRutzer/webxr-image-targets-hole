{"version":3,"sources":["services/xr/trackableImage.js","services/xr/imageTracking.js","utils/createUUID.js","store.js","utils/useXRFrame.js","utils/useXRTrackedImage.js","components/Collider.js","components/Bowl.js","components/Ball.js","utils/randomRange.js","utils/useInterval.js","components/Scene.js","components/App.js","index.js"],"names":["prepareImage","imageBitmapSrc","a","createImageBitmap","destroyImage","bitmap","close","trackableImage","image","width","Promise","res","rej","then","widthInMeters","destroy","catch","e","onXrSessionStart","session","getTrackedImageScores","onXrSessionEnd","onXrFrameUpdate","frame","referenceSpace","trackingResults","getImageTrackingResults","length","pose","getPose","imageSpace","position","Vector3","rotation","Quaternion","emulated","trackingState","measuredWidth","measuredWidthInMeters","copy","transform","orientation","createUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","useStore","create","set","balls","addBall","state","removeBall","ballUUID","filter","currBall","useXRFrame","callback","gl","useThree","requestRef","useRef","previousTimeRef","loop","useCallback","time","xrFrame","undefined","current","xr","getSession","requestAnimationFrame","useEffect","isPresenting","cancelAnimationFrame","useXrTrackedImage","xrDeviceState","useMemo","isSupported","window","XRImageTrackingResult","xrImageTracking","onSessionStart","onSessionEnd","onFrameUpdate","useState","imageTrackingResult","setImageTrackingResult","useXR","xrImageTrackingUpdate","getReferenceSpace","console","log","checkCanTrack","Collider","store","usePlane","mass","Math","PI","type","onCollide","body","name","ref","attach","args","opacity","transparent","color","Bowl","props","nodes","useGLTF","geometry","Cube","vertices","attributes","array","indices","index","useTrimesh","receiveShadow","Ball","startPos","map","useLoader","TextureLoader","useSphere","mesh","castShadow","meshBasicMaterial","randomRange","min","max","result","random","Number","toFixed","useInterval","delay","savedCallback","id","setInterval","clearInterval","Scene","group","useTransition","keys","item","from","enter","leave","transitions","useFrame","visible","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","scale","App","setTrackableImage","doCreateTrackableImage","createTrackableImage","currTrackableImage","className","onLoad","alt","src","onClick","print","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","href","target","style","left","top","camera","sessionInit","requiredFeatures","trackedImages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31ac3d0.chunk.js","sourcesContent":["const prepareImage = async imageBitmapSrc => {\n  return createImageBitmap(imageBitmapSrc)\n}\n\nconst destroyImage = bitmap => {\n  return bitmap.close()\n}\n\nexport const trackableImage = async (image, width) => {\n  return new Promise((res, rej) => {\n    prepareImage(image)\n      .then(bitmap => {\n        res({\n          image: {\n            image: bitmap,\n            widthInMeters: width\n          },\n          destroy: () => destroyImage(bitmap)\n        })\n      })\n      .catch(e => rej(e))\n  })\n}","import { Vector3, Quaternion } from \"three\"\n\nconst onXrSessionStart = async (session) => {\n  return session.getTrackedImageScores()\n}\n\nconst onXrSessionEnd = () => {\n\n}\n\nconst onXrFrameUpdate = (frame, referenceSpace) => {\n  const trackingResults = frame.getImageTrackingResults()\n\n  if (trackingResults.length === 0) return\n\n  const pose = frame.getPose(trackingResults[0].imageSpace, referenceSpace)\n  const position = new Vector3()\n  const rotation = new Quaternion()\n\n  return {\n    emulated: trackingResults[0].trackingState === \"emulated\",\n    measuredWidth: trackingResults[0].measuredWidthInMeters,\n    position: position.copy(pose.transform.position),\n    rotation: rotation.copy(pose.transform.orientation)\n  }\n}\n\nexport const imageTracking = () => {\n  return ({\n    onSessionStart: onXrSessionStart,\n    onSessionEnd: onXrSessionEnd,\n    onFrameUpdate: onXrFrameUpdate,\n  })\n}","function createUUID() {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  )\n}\n\nexport default createUUID","import create from \"zustand\"\n\nimport createUUID from \"./utils/createUUID\"\n\nconst useStore = create(set => ({\n  balls: [],\n  addBall: () => set(state => ({ balls: [...state.balls, `ball-${createUUID()}`] })),\n  removeBall: ballUUID => set(state => ({\n    balls: state.balls.filter(currBall => currBall !== ballUUID)\n  }))\n}))\n\nexport default useStore","import { useCallback, useEffect, useRef } from \"react\"\nimport { useThree } from \"react-three-fiber\"\n\nconst useXRFrame = callback => {\n  const { gl } = useThree()\n  const requestRef = useRef()\n  const previousTimeRef = useRef()\n\n  const loop = useCallback((time, xrFrame) => {\n    if (previousTimeRef.current !== undefined) {\n      callback(time, xrFrame)\n    }\n\n    previousTimeRef.current = time\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop)\n  }, [gl.xr, callback])\n\n  useEffect(() => {\n    if (!gl.xr?.isPresenting && !requestRef.current) {\n      return\n    }\n\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop)\n\n    return () => {\n      gl.xr.getSession().cancelAnimationFrame(loop)\n    }\n  }, [gl, gl.xr.isPresenting, loop])\n}\n\nexport default useXRFrame","import { useEffect, useState, useMemo, useCallback } from \"react\"\nimport { useXR } from \"@react-three/xr\"\nimport { useThree } from \"react-three-fiber\"\n\nimport { imageTracking } from \"../services/xr\"\nimport useXRFrame from \"./useXRFrame\"\n\nexport const useXrTrackedImage = () => {\n  const xrDeviceState = useMemo(() => ({\n    isSupported: !!window.XRImageTrackingResult\n  }), [])\n  const xrImageTracking = useMemo(() => imageTracking(), [])\n  const [imageTrackingResult, setImageTrackingResult] = useState()\n  const { gl } = useThree()\n  const { isPresenting } = useXR()\n\n  const xrImageTrackingUpdate = useCallback((time, xrFrame) => {\n    const imageTrackingResult = xrImageTracking.onFrameUpdate(xrFrame, gl.xr.getReferenceSpace())\n    setImageTrackingResult(imageTrackingResult)\n  }, [gl.xr, xrImageTracking])\n\n  useXRFrame(xrImageTrackingUpdate)  \n\n  useEffect(() => {\n    if (!xrDeviceState.isSupported || !isPresenting) return\n\n    const session = gl.xr.getSession()\n\n    const checkCanTrack = async () => {\n      try {\n        await xrImageTracking.onSessionStart(session)\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    checkCanTrack()\n\n    return () => {\n      xrImageTracking.onSessionEnd()\n      setImageTrackingResult(null)\n    }\n  }, [gl.xr, isPresenting, xrImageTracking, xrImageTrackingUpdate, xrDeviceState.isSupported])\n\n  return imageTrackingResult\n}\n\nexport default useXrTrackedImage","import { usePlane } from \"@react-three/cannon\"\n\nimport useStore from \"./../store\"\n\nconst Collider = () => {\n  const store = useStore()\n  const [ref] = usePlane(() => (\n    { mass: 0, \n      position: [0, -2, 0],\n      rotation: [-Math.PI / 2, 0, 0],\n      type: \"Static\",\n      onCollide: e => store.removeBall(e.body.name) \n    }))\n\n  return (\n    <mesh ref={ref}>\n      <planeBufferGeometry attach=\"geometry\" args={[5, 5]} />\n      <meshStandardMaterial opacity={0} transparent={true} attach=\"material\" color=\"#171717\" />\n    </mesh>\n  )\n}\n\nexport default Collider","import { useTrimesh } from \"@react-three/cannon\"\nimport { useGLTF } from \"@react-three/drei\"\n\nconst Bowl = (props) => {\n  const { nodes } = useGLTF(\"./hole.glb\")\n  const geometry = nodes.Cube.geometry\n  const vertices = geometry.attributes.position.array\n  const indices = geometry.index.array\n\n  const [ref] = useTrimesh(() => ({\n    mass: 0,\n    rotation: props.rotation,\n    args: [vertices, indices],\n  }))\n\n  return (\n    <mesh\n      ref={ref}\n      geometry={nodes.Cube.geometry}\n      receiveShadow\n      {...props}>\n      <meshStandardMaterial opacity={0} transparent={true} />\n    </mesh>\n  )\n}\n\nexport default Bowl","import { TextureLoader } from \"three\"\nimport { useLoader } from \"react-three-fiber\"\nimport { useSphere } from \"@react-three/cannon\"\nimport { a } from '@react-spring/three'\n\nconst Ball = ({ name, startPos, opacity }) => {\n  const map = useLoader(TextureLoader, '/ballMaterial.jpg')\n  const [ref] = useSphere(() => ({ mass: 1, position: startPos, args: 0.1 }))\n\n  return (\n    <a.mesh\n     receiveShadow\n      castShadow \n      name={name}\n      ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.1, 64, 64]} />\n      <a.meshBasicMaterial\n        transparent\n        opacity={opacity}\n        attach=\"material\"\n        map={map}\n      />\n    </a.mesh>\n  )\n}\n\nexport default Ball","const randomRange = (min, max) => {\n  const result = min + (max - min) * Math.random()\n  return Number(result.toFixed(1))\n}\n\nexport default randomRange","import { useRef, useEffect } from 'react'\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  useEffect(() => {\n    function tick() {\n      if (typeof savedCallback?.current !== 'undefined') {\n        savedCallback?.current()\n      }\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n\n  }, [delay])\n}\n\nexport default useInterval","import React, { useRef } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport { Physics } from \"@react-three/cannon\"\nimport { useTransition } from '@react-spring/three'\n\nimport useStore from \"./../store\"\nimport useXrTrackedImage from \"../utils/useXRTrackedImage\"\nimport Collider from \"./Collider\"\nimport Bowl from \"./Bowl\"\nimport Ball from \"./Ball\"\nimport randomRange from \"./../utils/randomRange\"\nimport useInterval from \"./../utils/useInterval\"\n\nfunction Scene() {\n  const imageTrackingResult = useXrTrackedImage()\n  const group = useRef()\n  const store = useStore()\n  const { gl } = useThree()\n\n  useInterval(\n    () => {\n      if (!gl.xr.isPresenting) return\n      store.addBall()\n    },\n    gl.xr.isPresenting ? 3000 : null\n  )\n\n\n  const [transitions] = useTransition(\n    store.balls,\n    {\n      keys: item => item,\n      from: { opacity: 0 },\n      enter: { opacity: 1 },\n      leave: { opacity: 0 }\n    },\n    [store.balls.length]\n  )\n\n  useFrame(() => {\n    if (!gl.xr.isPresenting || imageTrackingResult?.emulated) {\n      group.current.visible = false\n      return\n    }\n\n    if (imageTrackingResult) {\n      group.current.visible = true\n\n      group.current.position.copy(imageTrackingResult.position)\n      group.current.rotation.copy(imageTrackingResult.rotation)\n    }\n  })\n\n  return (\n    <>\n      <hemisphereLight intensity={0.35} />\n      <Physics>\n        <group ref={group}>\n          <spotLight\n            position={[30, 0, 30]}\n            angle={0.3}\n            penumbra={1}\n            intensity={2}\n            castShadow\n            shadow-mapSize-width={256}\n            shadow-mapSize-height={256} />\n          <pointLight position={[-30, 0, -30]} intensity={0.5} />\n          <group\n            scale={[0.07, 0.07, 0.07]}\n          >\n            <Collider />\n            <Bowl rotation={[0, 0, 0]} />\n            {transitions((props, item) => (\n              <Ball\n                {...item}\n                {...props}\n                name={item}\n                startPos={[randomRange(-1, 1), 9, randomRange(-1, 1)]}\n              />\n            ))}\n          </group>\n        </group>\n      </Physics>\n    </>\n  )\n}\n\nexport default Scene\n","import React, { useRef, useState } from \"react\"\nimport { ARCanvas } from \"@react-three/xr\"\n\nimport { trackableImage as createTrackableImage } from \"./../services/xr\"\nimport Scene from \"./Scene\"\n\nfunction App() {\n  const image = useRef()\n  const [trackableImage, setTrackableImage] = useState()\n\n  const doCreateTrackableImage = async () => {\n    try {\n      const currTrackableImage = await createTrackableImage(image.current, 0.12)\n      setTrackableImage(currTrackableImage.image)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"intro\">\n        <section>\n          <h1 className=\"title\">WebXR Image Target – Hole 🕳️</h1>\n          <img\n            className=\"trackedImage\"\n            onLoad={() => doCreateTrackableImage()}\n            alt=\"is cool\"\n            ref={image}\n            src={process.env.PUBLIC_URL + \"/trackedImage.jpg\"} />\n        </section>\n        <section>\n          <ol className=\"explanation\">\n            <li>\n              <button\n                onClick={() => window.print()}>\n                Print image\n                  <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"1em\"\n                  height=\"1em\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#e2e2e2\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"square\"\n                  strokeLinejoin=\"arcs\"\n                >\n                  <path d=\"M7 17l9.2-9.2M17 17V7H7\" />\n                </svg>\n              </button>  10cm x 10cm\n            </li>\n            <li>Start AR</li>\n            <li>Scan image on flat surface</li>\n          </ol>\n\n        </section>\n\n        <section>\n          <hr />\n          <small className=\"compatibility\">\n            Currently only available in Chrome for Android &gt;=89, with flag <span className=\"snippet\">chrome://flags#webxr-incubations</span> active\n          </small>\n          <small className=\"credit\">\n            by <a href=\"https://thomasrutzer.github.io/\" target=\"blank\">\n              Thomas Rutzer\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"1em\"\n                height=\"1em\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n                strokeLinejoin=\"arcs\"\n              >\n                <path d=\"M7 17l9.2-9.2M17 17V7H7\" />\n              </svg>\n            </a>\n          </small>\n        </section>\n      </div>\n\n      { trackableImage &&\n        <ARCanvas\n          style={{ position: \"absolute\", left: 0, top: 0 }}\n          camera={{ position: [5, 10, 0] }}\n          sessionInit={{\n            requiredFeatures: [\"image-tracking\"],\n            trackedImages: [trackableImage]\n          }}>\n          <Scene />\n        </ARCanvas>\n      }\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}